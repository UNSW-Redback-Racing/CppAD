<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Atomic Vector Element-wise Operators: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Atomic Vector Element-wise Operators: Example and Test">
<meta name="keywords" id="keywords" content=" atomic vector element-wise operators: example test syntax purpose operations base2ad x op u v y source code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_three_vector_op.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_three_mat_mul.hpp.htm" target="_top">Prev</a>
</td><td><a href="chkpoint_two.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_three_example</option>
<option>atomic_three_vector_op.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_advalued_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_three_example_htm.js'></script>
</td>
<td>atomic_three_vector_op.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>---..Vector Operations</option>
<option>---..base2ad</option>
<option>x</option>
<option>op</option>
<option>u</option>
<option>v</option>
<option>y</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Atomic Vector Element-wise Operators: Example and Test</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>atomic_vector_op&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>vec_op</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>name</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>vec_op</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>


<br>
<br>
<big><a name="Purpose.Vector Operations" id="Purpose.Vector Operations">Vector Operations</a></big>
<br>
This atomic function implements

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>u</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>op</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>v</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>op</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>u</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>v</span></font></i></code>
 are defined below.

<br>
<br>
<big><a name="Purpose.base2ad" id="Purpose.base2ad">base2ad</a></big>
<br>
This also serves as an example for how one can
define 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
 atomic operations use
atomic operators (instead of element-wise operators).
This avoids expanding the atomic operator to may operations when
recording derivative calculations.
For example, notice the difference between <code><font color="blue">forward_add</font></code>
for the <code><font color="blue">double</font></code> and the <code><font color="blue">AD&lt;double&gt;</font></code> cases:
<pre><tt>    <font color="#009900">void</font> <b><font color="#000000">forward_add</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              tx          <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>                    ty          <font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font>     <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> y_index  <font color="#990000">=</font> i <font color="#990000">*</font>           <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                ty<font color="#990000">[</font>y_index<font color="#990000">]</font>     <font color="#990000">=</font> tx<font color="#990000">[</font>u_index<font color="#990000">]</font> <font color="#990000">+</font> tx<font color="#990000">[</font>v_index<font color="#990000">];</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <font color="#009900">void</font> <b><font color="#000000">forward_add</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        atx         <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>              aty         <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> add_enum <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#000000">copy_atx_to_ax</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> k<font color="#990000">,</font> atx<font color="#990000">,</font> ax<font color="#990000">);</font>
            <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax<font color="#990000">,</font> ay<font color="#990000">);</font> <i><font color="#9A1900">// atomic add operation</font></i>
            <b><font color="#000000">copy_ay_to_aty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> ay<font color="#990000">,</font> aty<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>    </tt></pre>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 to denote the argument to the atomic function.
The length of 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 is denoted by 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 and must be odd.
We use the notation 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;(</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;-&nbsp;1)&nbsp;/&nbsp;2</span></font></code>
.

<br>
<br>
<b><big><a name="op" id="op">op</a></big></b>
<br>
The value 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>[0]</span></font></code>

is a constant parameter with the following possible values:
<pre><tt>    <i><font color="#9A1900">// atomic_vector_op::op_enum_t</font></i>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">enum</font></b> <font color="#FF0000">{</font>
        add_enum<font color="#990000">,</font>
        sub_enum<font color="#990000">,</font>
        mul_enum<font color="#990000">,</font>
        div_enum<font color="#990000">,</font>
        num_op<font color="#990000">,</font>
    <font color="#FF0000">}</font> op_enum_t<font color="#990000">;</font>    </tt></pre>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>op</span></font></i></code>
 for the corresponding operator.

<br>
<br>
<b><big><a name="u" id="u">u</a></big></b>
<br>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>u</span></font></i></code>
 to denote the following sub-vector of 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>u</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;(&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>[1]&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>]&nbsp;)<br>
</span></font></code>
<br>
<b><big><a name="v" id="v">v</a></big></b>
<br>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>v</span></font></i></code>
 to denote the following sub-vector of 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>v</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;(&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;1]&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>[2&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>]&nbsp;)<br>
</span></font></code>
<br>
<b><big><a name="y" id="y">y</a></big></b>
<br>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 to denote the atomic function return value.
The length of 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 is equal to 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
.


<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>

<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>
<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>          <i><font color="#9A1900">// isolate items below to this file</font></i>
<i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// abbreviations</font></i>
<b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>AD<font color="#990000">;</font>
<b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">;</font>
<i><font color="#9A1900">// ===========================================================================</font></i>
<b><font color="#0000FF">class</font></b> <font color="#008080">atomic_vector_op</font> <font color="#990000">:</font> <b><font color="#0000FF">public</font></b> CppAD<font color="#990000">::</font>atomic_three<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#FF0000">{</font>
<i><font color="#9A1900">//</font></i>
<b><font color="#0000FF">public</font></b><font color="#990000">:</font>
    <i><font color="#9A1900">// BEGIN op_enum_t</font></i>
    <i><font color="#9A1900">// atomic_vector_op::op_enum_t</font></i>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">enum</font></b> <font color="#FF0000">{</font>
        add_enum<font color="#990000">,</font>
        sub_enum<font color="#990000">,</font>
        mul_enum<font color="#990000">,</font>
        div_enum<font color="#990000">,</font>
        num_op<font color="#990000">,</font>
    <font color="#FF0000">}</font> op_enum_t<font color="#990000">;</font>
    <i><font color="#9A1900">// END op_enum_t</font></i>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// ctor</font></i>
    <b><font color="#000000">atomic_vector_op</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>string<font color="#990000">&amp;</font> name<font color="#990000">)</font> <font color="#990000">:</font>
    CppAD<font color="#990000">::</font>atomic_three<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font>name<font color="#990000">)</font>
    <font color="#FF0000">{</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">private</font></b><font color="#990000">:</font>
    <i><font color="#9A1900">// ------------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// copy routines</font></i>
    <i><font color="#9A1900">// ------------------------------------------------------------------------</font></i>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_atx_to_ax</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                        n<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        m<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        q<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        k_u<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        k_v<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>   atx<font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>         ax<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> atx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> n <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> ax<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font>  <font color="#990000">==</font> n <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font>     <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k_u<font color="#990000">;</font>
            <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k_v<font color="#990000">;</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font>       <font color="#990000">=</font> atx<font color="#990000">[</font>u_index<font color="#990000">];</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font>i<font color="#990000">]</font>    <font color="#990000">=</font> atx<font color="#990000">[</font>v_index<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_ay_to_aty</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                        n<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        m<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        q<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        k<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>   ay<font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>         aty<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> aty<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> ay<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font>  <font color="#990000">==</font> m <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> y_index  <font color="#990000">=</font> i <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
            aty<font color="#990000">[</font>y_index<font color="#990000">]</font>    <font color="#990000">=</font> ay<font color="#990000">[</font>i<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_aty_to_au</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                        n<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        m<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        q<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        k<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>   aty<font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>         ax<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> aty<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> ax<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font>  <font color="#990000">==</font> n <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> y_index  <font color="#990000">=</font> i  <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font>       <font color="#990000">=</font> aty<font color="#990000">[</font>y_index<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_atx_to_av</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                        n<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        m<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        q<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        k<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>   atx<font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>         ax<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> atx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> n <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> ax<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font>  <font color="#990000">==</font> n <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font>  m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font>   <font color="#990000">=</font> atx<font color="#990000">[</font>v_index<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_atx_to_au</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                        n<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        m<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        q<font color="#990000">,</font>
        <font color="#008080">size_t</font>                        k<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>   atx<font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>         ax<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> atx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> n <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> ax<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font>  <font color="#990000">==</font> n <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font>       <font color="#990000">=</font> atx<font color="#990000">[</font>u_index<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ------------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// for_type</font></i>
    <i><font color="#9A1900">// ------------------------------------------------------------------------</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">for_type</font></b><font color="#990000">(</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>               parameter_x <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font>CppAD<font color="#990000">::</font>ad_type_enum<font color="#990000">&gt;&amp;</font>  type_x      <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font>CppAD<font color="#990000">::</font>ad_type_enum<font color="#990000">&gt;&amp;</font>        type_y      <font color="#990000">)</font> <b><font color="#0000FF">override</font></b>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// n, m</font></i>
        <font color="#008080">size_t</font> n <font color="#990000">=</font> parameter_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> m <font color="#990000">=</font> <font color="#990000">(</font>n <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// ok</font></i>
        <font color="#009900">bool</font> ok  <font color="#990000">=</font> type_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> n<font color="#990000">;</font>
        ok      <font color="#990000">&amp;=</font> type_y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> m<font color="#990000">;</font>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <font color="#990000">!</font> ok <font color="#990000">)</font>
            <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// type_y</font></i>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
            type_y<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> std<font color="#990000">::</font><b><font color="#000000">max</font></b><font color="#990000">(</font> type_x<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">,</font> type_x<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// forward_add</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// BEGIN forward_add</font></i>
    <font color="#009900">void</font> <b><font color="#000000">forward_add</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              tx          <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>                    ty          <font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font>     <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> y_index  <font color="#990000">=</font> i <font color="#990000">*</font>           <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                ty<font color="#990000">[</font>y_index<font color="#990000">]</font>     <font color="#990000">=</font> tx<font color="#990000">[</font>u_index<font color="#990000">]</font> <font color="#990000">+</font> tx<font color="#990000">[</font>v_index<font color="#990000">];</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <font color="#009900">void</font> <b><font color="#000000">forward_add</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        atx         <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>              aty         <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> add_enum <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#000000">copy_atx_to_ax</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> k<font color="#990000">,</font> atx<font color="#990000">,</font> ax<font color="#990000">);</font>
            <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax<font color="#990000">,</font> ay<font color="#990000">);</font> <i><font color="#9A1900">// atomic add operation</font></i>
            <b><font color="#000000">copy_ay_to_aty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> ay<font color="#990000">,</font> aty<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// END forward_add</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// forward_sub</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <font color="#009900">void</font> <b><font color="#000000">forward_sub</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              tx          <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>                    ty          <font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font>     <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> y_index  <font color="#990000">=</font> i           <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                ty<font color="#990000">[</font>y_index<font color="#990000">]</font>     <font color="#990000">=</font> tx<font color="#990000">[</font>u_index<font color="#990000">]</font> <font color="#990000">-</font> tx<font color="#990000">[</font>v_index<font color="#990000">];</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <font color="#009900">void</font> <b><font color="#000000">forward_sub</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        atx         <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>              aty         <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> sub_enum <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#000000">copy_atx_to_ax</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> k<font color="#990000">,</font> atx<font color="#990000">,</font> ax<font color="#990000">);</font>
            <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax<font color="#990000">,</font> ay<font color="#990000">);</font> <i><font color="#9A1900">// atomic add operation</font></i>
            <b><font color="#000000">copy_ay_to_aty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> ay<font color="#990000">,</font> aty<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// forward_mul</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <font color="#009900">void</font> <b><font color="#000000">forward_mul</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              tx          <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>                    ty          <font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> y_index <font color="#990000">=</font> i <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                ty<font color="#990000">[</font>y_index<font color="#990000">]</font>    <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> d <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> d <font color="#990000">&lt;=</font> k<font color="#990000">;</font> d<font color="#990000">++)</font>
                <font color="#FF0000">{</font>   <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font>     <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> <font color="#990000">(</font>k<font color="#990000">-</font>d<font color="#990000">);</font>
                    <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> d<font color="#990000">;</font>
                    ty<font color="#990000">[</font>y_index<font color="#990000">]</font>    <font color="#990000">+=</font> tx<font color="#990000">[</font>u_index<font color="#990000">]</font> <font color="#990000">*</font> tx<font color="#990000">[</font>v_index<font color="#990000">];</font>
                <font color="#FF0000">}</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <font color="#009900">void</font> <b><font color="#000000">forward_mul</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        atx         <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>              aty         <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">ax_mul</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ax_add</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax_mul<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> mul_enum <font color="#990000">);</font>
        ax_add<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> add_enum <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// y = 0</font></i>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                ay<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> d <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> d <font color="#990000">&lt;=</font> k<font color="#990000">;</font> d<font color="#990000">++)</font>
            <font color="#FF0000">{</font>   <i><font color="#9A1900">// sum = y</font></i>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                    ax_add<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> ay<font color="#990000">[</font>i<font color="#990000">];</font>
                <i><font color="#9A1900">//</font></i>
                <i><font color="#9A1900">// y = u^{k-d} * v^k</font></i>
                <b><font color="#000000">copy_atx_to_ax</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">-</font>d<font color="#990000">,</font> d<font color="#990000">,</font> atx<font color="#990000">,</font> ax_mul<font color="#990000">);</font>
                <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax_mul<font color="#990000">,</font> ay<font color="#990000">);</font> <i><font color="#9A1900">// atomic multiply operation</font></i>
                <i><font color="#9A1900">//</font></i>
                <i><font color="#9A1900">// y = y + sum</font></i>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                    ax_add<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> ay<font color="#990000">[</font>i<font color="#990000">];</font>
                <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax_add<font color="#990000">,</font> ay<font color="#990000">);</font> <i><font color="#9A1900">// atomic add operation</font></i>
            <font color="#FF0000">}</font>
            <b><font color="#000000">copy_ay_to_aty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> ay<font color="#990000">,</font> aty<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// forward_div</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <font color="#009900">void</font> <b><font color="#000000">forward_div</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              tx          <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>                    ty          <font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> y_index  <font color="#990000">=</font> i <font color="#990000">*</font>       <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                <font color="#008080">size_t</font> u_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> k<font color="#990000">;</font>
                ty<font color="#990000">[</font>y_index<font color="#990000">]</font>     <font color="#990000">=</font> tx<font color="#990000">[</font>u_index<font color="#990000">];</font>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> d <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> d <font color="#990000">&lt;=</font> k<font color="#990000">;</font> d<font color="#990000">++)</font>
                <font color="#FF0000">{</font>   <font color="#008080">size_t</font> y_other      <font color="#990000">=</font> i       <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> <font color="#990000">(</font>k<font color="#990000">-</font>d<font color="#990000">);</font>
                    <font color="#008080">size_t</font> v_index  <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> d<font color="#990000">;</font>
                    ty<font color="#990000">[</font>y_index<font color="#990000">]</font> <font color="#990000">-=</font> ty<font color="#990000">[</font>y_other<font color="#990000">]</font> <font color="#990000">*</font> tx<font color="#990000">[</font>v_index<font color="#990000">];</font>
                <font color="#FF0000">}</font>
                <font color="#008080">size_t</font> v_index <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i <font color="#990000">)</font> <font color="#990000">*</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">;</font>
                ty<font color="#990000">[</font>y_index<font color="#990000">]</font> <font color="#990000">/=</font> tx<font color="#990000">[</font>v_index<font color="#990000">];</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <font color="#009900">void</font> <b><font color="#000000">forward_div</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                             n           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             m           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        atx         <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>              aty         <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">ax_div</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ax_mul</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ax_sub</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax_div<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> div_enum <font color="#990000">);</font>
        ax_mul<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> mul_enum <font color="#990000">);</font>
        ax_sub<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> sub_enum <font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> p<font color="#990000">;</font> k <font color="#990000">&lt;=</font> q<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// ty[y_index] = tx[u_index]</font></i>
            <b><font color="#000000">copy_atx_to_au</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> atx<font color="#990000">,</font> ax_sub<font color="#990000">);</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> d <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> d <font color="#990000">&lt;=</font> k<font color="#990000">;</font> d<font color="#990000">++)</font>
            <font color="#FF0000">{</font>   <i><font color="#9A1900">// ty[y_other] * tx[v_index];</font></i>
                <b><font color="#000000">copy_aty_to_au</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">-</font>d<font color="#990000">,</font> aty<font color="#990000">,</font> ax_mul<font color="#990000">);</font>
                <b><font color="#000000">copy_atx_to_av</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> d<font color="#990000">,</font> atx<font color="#990000">,</font> ax_mul<font color="#990000">);</font>
                <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax_mul<font color="#990000">,</font> ay<font color="#990000">);</font>
                <i><font color="#9A1900">// ty[y_index] -= ty[y_other] * tx[v_index];</font></i>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                    ax_sub<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> ay<font color="#990000">[</font>i<font color="#990000">];</font>
                <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax_sub<font color="#990000">,</font> ay<font color="#990000">);</font>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                    ax_sub<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> ay<font color="#990000">[</font>i<font color="#990000">];</font>
            <font color="#FF0000">}</font>
            <i><font color="#9A1900">// ty[y_index] /= tx[v_index];</font></i>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                ax_div<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> ax_sub<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">];</font>
            <b><font color="#000000">copy_atx_to_av</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">,</font> atx<font color="#990000">,</font> ax_div<font color="#990000">);</font>
            <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>ax_div<font color="#990000">,</font> ay<font color="#990000">);</font>
            <b><font color="#000000">copy_ay_to_aty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> k<font color="#990000">,</font> ay<font color="#990000">,</font> aty<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// forward</font></i>
    <i><font color="#9A1900">// forward mode routines called by ADFun&lt;Base&gt; objects</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">forward</font></b><font color="#990000">(</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              parameter_x <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font>CppAD<font color="#990000">::</font>ad_type_enum<font color="#990000">&gt;&amp;</font> type_x      <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             need_y      <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>              tx          <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>                    ty          <font color="#990000">)</font> <b><font color="#0000FF">override</font></b>
    <font color="#FF0000">{</font>
        <i><font color="#9A1900">// op, n, m</font></i>
        <font color="#008080">op_enum_t</font> op <font color="#990000">=</font> <b><font color="#000000">op_enum_t</font></b><font color="#990000">(</font> parameter_x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">);</font>
        <font color="#008080">size_t</font> n     <font color="#990000">=</font> parameter_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> m     <font color="#990000">=</font> <font color="#990000">(</font>n <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> tx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> n <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> ty<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> m <font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
        <font color="#FF0000">{</font>
            <i><font color="#9A1900">// addition</font></i>
            <b><font color="#0000FF">case</font></b> add_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_add</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">);</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// subtraction</font></i>
            <b><font color="#0000FF">case</font></b> sub_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_sub</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">);</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// multiplication</font></i>
            <b><font color="#0000FF">case</font></b> mul_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_mul</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">);</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// division</font></i>
            <b><font color="#0000FF">case</font></b> div_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_div</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">);</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// error</font></i>
            <b><font color="#0000FF">case</font></b> num_op<font color="#990000">:</font>
            <b><font color="#000000">assert</font></b><font color="#990000">(</font><b><font color="#0000FF">false</font></b><font color="#990000">);</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// forward</font></i>
    <i><font color="#9A1900">// forward mode routines called by ADFun&lt; AD&lt;Base&gt; , Base&gt; objects</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">forward</font></b><font color="#990000">(</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        aparameter_x <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font>CppAD<font color="#990000">::</font>ad_type_enum<font color="#990000">&gt;&amp;</font> type_x      <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             need_y      <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             p           <font color="#990000">,</font>
        <font color="#008080">size_t</font>                             q           <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>        atx         <font color="#990000">,</font>
        vector<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>              aty         <font color="#990000">)</font> <b><font color="#0000FF">override</font></b>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// op, n, m</font></i>
        <font color="#008080">op_enum_t</font> op <font color="#990000">=</font> <b><font color="#000000">op_enum_t</font></b><font color="#990000">(</font> <b><font color="#000000">Value</font></b><font color="#990000">(</font> aparameter_x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">)</font> <font color="#990000">);</font>
        <font color="#008080">size_t</font> n     <font color="#990000">=</font> aparameter_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> m     <font color="#990000">=</font> <font color="#990000">(</font>n <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> atx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> n <font color="#990000">);</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font> aty<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>q<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> m <font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <font color="#009900">bool</font> ok<font color="#990000">;</font>
        <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
        <font color="#FF0000">{</font>
            <i><font color="#9A1900">// addition</font></i>
            <b><font color="#0000FF">case</font></b> add_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_add</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">);</font>
            ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// subtraction</font></i>
            <b><font color="#0000FF">case</font></b> sub_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_sub</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">);</font>
            ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// multiplication</font></i>
            <b><font color="#0000FF">case</font></b> mul_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_mul</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">);</font>
            ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// division</font></i>
            <b><font color="#0000FF">case</font></b> div_enum<font color="#990000">:</font>
            <b><font color="#000000">forward_div</font></b><font color="#990000">(</font>n<font color="#990000">,</font> m<font color="#990000">,</font> q<font color="#990000">,</font> p<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">);</font>
            ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <i><font color="#9A1900">// error</font></i>
            <b><font color="#0000FF">case</font></b> num_op<font color="#990000">:</font>
            <b><font color="#000000">assert</font></b><font color="#990000">(</font><b><font color="#0000FF">false</font></b><font color="#990000">);</font>
            ok <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
    <font color="#FF0000">}</font>

<font color="#FF0000">}</font><font color="#990000">;</font> <i><font color="#9A1900">// End of atomic_vector_op class</font></i>
<i><font color="#9A1900">// ============================================================================</font></i>
<font color="#009900">bool</font> <b><font color="#000000">test_atom_double</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>NearEqual<font color="#990000">;</font>
    <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> CppAD<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// vec_op</font></i>
    <i><font color="#9A1900">// atomic vector_op object</font></i>
    <font color="#008080">atomic_vector_op</font> <b><font color="#000000">vec_op</font></b><font color="#990000">(</font><font color="#FF0000">"atomic_vector_op"</font><font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// m, n</font></i>
    <i><font color="#9A1900">// size of x and y</font></i>
    <font color="#008080">size_t</font> m <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> n <font color="#990000">=</font> <font color="#993399">1</font> <font color="#990000">+</font> <font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// op_enum_t</font></i>
    <b><font color="#0000FF">typedef</font></b> atomic_vector_op<font color="#990000">::</font><font color="#008080">op_enum_t</font> op_enum_t<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// num_op</font></i>
    <font color="#008080">size_t</font> num_op <font color="#990000">=</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font> atomic_vector_op<font color="#990000">::</font>num_op <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// i_op</font></i>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i_op <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i_op <font color="#990000">&lt;</font> num_op<font color="#990000">;</font> <font color="#990000">++</font>i_op<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// op</font></i>
        <font color="#008080">op_enum_t</font> op <font color="#990000">=</font> <b><font color="#000000">op_enum_t</font></b><font color="#990000">(</font>i_op<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Create the function f(x) = u op v</font></i>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">auv</font></b><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> i<font color="#990000">++)</font>
        <font color="#FF0000">{</font>   auv<font color="#990000">[</font>i<font color="#990000">]</font>     <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">);</font> <i><font color="#9A1900">// u[i]</font></i>
            auv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">+</font><font color="#993399">2</font><font color="#990000">);</font> <i><font color="#9A1900">// v[i]</font></i>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// declare independent variables and start tape recording</font></i>
        CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font>auv<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// ax, ay</font></i>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font>op<font color="#990000">);</font> <i><font color="#9A1900">// code for this operator</font></i>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font>     <font color="#990000">=</font> auv<font color="#990000">[</font>i<font color="#990000">];</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> auv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// ay = u op v</font></i>
        <b><font color="#000000">vec_op</font></b><font color="#990000">(</font>ax<font color="#990000">,</font> ay<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// create f: x -&gt; y and stop tape recording</font></i>
        CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> f<font color="#990000">;</font>
        f<font color="#990000">.</font><b><font color="#000000">Dependent</font></b> <font color="#990000">(</font>auv<font color="#990000">,</font> ay<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// uv, y</font></i>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">uv</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">*</font>m<font color="#990000">),</font> <b><font color="#000000">duv</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">*</font>m<font color="#990000">),</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>m<font color="#990000">),</font> <b><font color="#000000">dy</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> <font color="#993399">2</font><font color="#990000">*</font>m<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
        <font color="#FF0000">{</font>   uv<font color="#990000">[</font>j<font color="#990000">]</font>  <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> j<font color="#990000">);</font>
            duv<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
        <font color="#FF0000">}</font>
        y  <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> uv<font color="#990000">);</font>
        dy <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> duv<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#009900">double</font> check_y<font color="#990000">,</font> check_dy<font color="#990000">,</font> den_sq<font color="#990000">;</font>
            <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
            <font color="#FF0000">{</font>
                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>add_enum<font color="#990000">:</font>
                check_y  <font color="#990000">=</font>   uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">+</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                check_dy <font color="#990000">=</font>  duv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">+</font> duv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>sub_enum<font color="#990000">:</font>
                check_y  <font color="#990000">=</font>  uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">-</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                check_dy <font color="#990000">=</font> duv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">-</font> duv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>mul_enum<font color="#990000">:</font>
                check_y  <font color="#990000">=</font>  uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">*</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                check_dy <font color="#990000">=</font> duv<font color="#990000">[</font>i <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font>
                         <font color="#990000">+</font>  uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">*</font> duv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>div_enum<font color="#990000">:</font>
                den_sq   <font color="#990000">=</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">*</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                check_y  <font color="#990000">=</font>  uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">/</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
                check_dy <font color="#990000">=</font> duv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">/</font>  uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font>
                         <font color="#990000">-</font>  uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">*</font> duv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">/</font> den_sq<font color="#990000">;</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>num_op<font color="#990000">:</font>
                <b><font color="#000000">assert</font></b><font color="#990000">(</font> <b><font color="#0000FF">false</font></b> <font color="#990000">);</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
            <font color="#FF0000">}</font>
            ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font> y<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">,</font>  check_y<font color="#990000">,</font>  eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
            ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font> dy<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">,</font> check_dy<font color="#990000">,</font>  eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
<i><font color="#9A1900">// ============================================================================</font></i>
<font color="#009900">bool</font> <b><font color="#000000">test_atom_ad_double</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>NearEqual<font color="#990000">;</font>
    <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> CppAD<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// vec_op</font></i>
    <i><font color="#9A1900">// atomic vector_op object</font></i>
    <font color="#008080">atomic_vector_op</font> <b><font color="#000000">vec_op</font></b><font color="#990000">(</font><font color="#FF0000">"atomic_vector_op"</font><font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// m, n</font></i>
    <i><font color="#9A1900">// size of x and y</font></i>
    <font color="#008080">size_t</font> m <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> n <font color="#990000">=</font> <font color="#993399">1</font> <font color="#990000">+</font> <font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// op_enum_t</font></i>
    <b><font color="#0000FF">typedef</font></b> atomic_vector_op<font color="#990000">::</font><font color="#008080">op_enum_t</font> op_enum_t<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// num_op</font></i>
    <font color="#008080">size_t</font> num_op <font color="#990000">=</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font> atomic_vector_op<font color="#990000">::</font>num_op <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// i_op</font></i>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i_op <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i_op <font color="#990000">&lt;</font> num_op <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font> <font color="#990000">++</font>i_op<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// op</font></i>
        <font color="#008080">op_enum_t</font> op <font color="#990000">=</font> <b><font color="#000000">op_enum_t</font></b><font color="#990000">(</font>i_op<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Create the function f(x) = u op v</font></i>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">auv</font></b><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> <font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
            auv<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> j<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// declare independent variables and start tape recording</font></i>
        CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font>auv<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// ax, ay</font></i>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font>op<font color="#990000">);</font> <i><font color="#9A1900">// code for this operator</font></i>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> i<font color="#990000">]</font>     <font color="#990000">=</font> auv<font color="#990000">[</font>i<font color="#990000">];</font>
            ax<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> auv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// ay = u op v</font></i>
        <b><font color="#000000">vec_op</font></b><font color="#990000">(</font>ax<font color="#990000">,</font> ay<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// create f: x -&gt; y and stop tape recording</font></i>
        CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">f</font></b><font color="#990000">(</font>auv<font color="#990000">,</font> ay<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// af</font></i>
        CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt; AD&lt;double&gt;, double&gt;</font> af <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">base2ad</font></b><font color="#990000">();</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Create the function g(x) where g_i(x) = d/dv[i] f_i(x) using the</font></i>
        <i><font color="#9A1900">// fact that d/dv[j] f_i (x) is zero when i is not equal to j</font></i>
        CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font>auv<font color="#990000">);</font>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">aduv</font></b><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">),</font> <b><font color="#000000">az</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   aduv<font color="#990000">[</font>i<font color="#990000">]</font>     <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font> <i><font color="#9A1900">// du[i]</font></i>
            aduv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font> <i><font color="#9A1900">// dv[i]</font></i>
        <font color="#FF0000">}</font>
        af<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> auv<font color="#990000">);</font>
        az <font color="#990000">=</font> af<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> aduv<font color="#990000">);</font>
        CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">g</font></b><font color="#990000">(</font>auv<font color="#990000">,</font> az<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// uv, y</font></i>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">uv</font></b><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">),</font> <b><font color="#000000">z</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> <font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
            uv<font color="#990000">[</font>j<font color="#990000">]</font>  <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font><font color="#993399">1</font> <font color="#990000">+</font> j<font color="#990000">);</font>
        z  <font color="#990000">=</font> g<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> uv<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#009900">double</font> check_z<font color="#990000">;</font>
            <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
            <font color="#FF0000">{</font>
                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>add_enum<font color="#990000">:</font>
                check_z <font color="#990000">=</font>  <font color="#993399">1.0</font><font color="#990000">;</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>sub_enum<font color="#990000">:</font>
                check_z  <font color="#990000">=</font>  <font color="#990000">-</font> <font color="#993399">1.0</font><font color="#990000">;</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>mul_enum<font color="#990000">:</font>
                check_z  <font color="#990000">=</font> uv<font color="#990000">[</font>i<font color="#990000">];</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>div_enum<font color="#990000">:</font>
                check_z <font color="#990000">=</font> <font color="#990000">-</font> uv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">/</font> <font color="#990000">(</font>uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">*</font> uv<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">]);</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

                <b><font color="#0000FF">case</font></b> atomic_vector_op<font color="#990000">::</font>num_op<font color="#990000">:</font>
                <b><font color="#000000">assert</font></b><font color="#990000">(</font> <b><font color="#0000FF">false</font></b> <font color="#990000">);</font>
                <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
            <font color="#FF0000">}</font>
            ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font> z<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">,</font>  check_z<font color="#990000">,</font>  eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font>  <i><font color="#9A1900">// End empty namespace</font></i>

<font color="#009900">bool</font> <b><font color="#000000">vector_op</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">test_atom_double</font></b><font color="#990000">();</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">test_atom_ad_double</font></b><font color="#990000">();</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/atomic_three/vector_op.cpp

</body>
</html>
